{"version":3,"file":"js/200.96e2a589.js","mappings":"0HAEA,MAAMA,EAAU,wBAEVC,EAAoB,MACpBC,EAAU,CACZC,YAAY,EACZC,MAAO,CACHC,QAAS,GACTC,MAAO,KACPC,MAAO,MAEXC,QAAS,CACLC,aAAaC,EAASC,GAClB,IAAIC,EAAY,CACZC,KAAM,OACNC,QAAS,MACTC,IAAKf,EAAU,UACfgB,QAAS,IAGb,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzBT,EAAQU,SAAS,kBAAmBR,EAAW,CAACS,MAAM,IAAOC,MAAMC,IAC/Db,EAAQU,SAAS,iCAAiCI,EAAAA,EAAAA,IAAM,QAAS,CAACH,MAAM,IAAOC,MAAK,KAChFJ,EAAQK,SAEbE,OAAMC,IACLP,EAAOO,UAKnBjB,iCAAiCC,EAASC,GACtC,IAAIgB,EAAM,CACNd,KAAM,OACNC,QAASb,EACTc,IAAKf,EAAU,8BACf4B,MAAMC,EAAAA,EAAAA,IAAIlB,EAAOiB,OAGrB,OAAO,IAAIX,SAAQ,CAACC,EAASC,KACzBT,EAAQU,SAAS,kBAAmBO,EAAK,CAACN,MAAM,IAAOC,MAAKC,IACxDL,EAAQK,MACTE,OAAMC,IACLP,EAAOO,UAInBjB,4BAA4BC,EAASC,GACjC,IAAIgB,EAAM,CACNd,KAAM,OACNC,QAASb,EACTc,IAAKf,EAAU,yBACf4B,MAAMC,EAAAA,EAAAA,IAAIlB,EAAOiB,OAGrB,OAAO,IAAIX,SAAQ,CAACC,EAASC,KACzBT,EAAQU,SAAS,kBAAmBO,EAAK,CAACN,MAAM,IAAOC,MAAKC,IACxDL,EAAQK,MACTE,OAAMC,IACLP,EAAOO,UAInBjB,aAAaC,EAASC,GAClB,IAAIgB,EAAM,CACNd,KAAM,OACNC,QAASb,EACTc,IAAKf,EAAU,WAAaW,EAAOmB,GACnCF,MAAMC,EAAAA,EAAAA,IAAIlB,EAAOiB,OAGrB,OAAO,IAAIX,SAAQ,CAACC,EAASC,KACzBT,EAAQU,SAAS,kBAAmBO,EAAK,CAACN,MAAM,IAAOC,MAAKC,IACxDL,EAAQK,MACTE,OAAMC,IACLP,EAAOO,UAInBjB,YAAYC,EAASC,GACjB,IAAIoB,GAAKF,EAAAA,EAAAA,IAAI,CACTG,SAAUrB,EAAOsB,iBACjBC,SAAUvB,EAAOwB,SAGrB,OAAO,IAAIlB,SAAQ,CAACC,EAASC,KACzBiB,OAAOhB,SAAS,kBAAmB,CAC/BN,QAAS,MACTD,KAAM,OACNE,IAAK,8BACLa,KAAMG,EACNM,SAAS,IACVf,MAAKC,IACJb,EAAQU,SAAS,gCAAiCG,EAAEK,KAAM,CAACP,MAAM,IAAOC,MAAK,KACzE,IAAIgB,EAAqBf,EAAEK,KAAKW,QAC5BC,EAAeJ,OAAOhC,MAAM,kBAAkBmC,QAC9CE,EAAkBL,OAAOhC,MAAM,kBAAkBqC,gBACrDC,MAAMC,sBAAuBF,EAAkBD,EAAeF,GAAoBhB,MAAK,KACnFZ,EAAQU,SAAS,uBAAwB,CACrCd,MAAOiB,EAAEK,KAAKtB,OACf,CAACe,MAAM,IAAOC,MAAK,KAClBJ,GAAQ,eAIrBO,OAAMC,IACLP,EAAOO,YAO3B","sources":["webpack://cms/./src/Modules/App/User/store/api.js"],"sourcesContent":["import {AFD, getLS} from 'devegram-javascript-util';\n\nconst baseUrl = '/xapi/individual/user';\nconst baseUrl2 = '/xapi/individual/UserModule';\nconst moduleAjaxService = 'AMS'\nconst userAPI = {\n    namespaced: true,\n    state: {\n        version: 0.1,\n        token: null,\n        title: null\n    },\n    actions: {\n        async verify(context, params) {\n            let verifyAPI = {\n                verb: 'post',\n                service: 'AMS',\n                url: baseUrl + '/verify',\n                headers: {}\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', verifyAPI, {root: true}).then((r) => {\n                    context.dispatch('App-User-state/setProfileInfo', getLS('user'), {root: true}).then(() => {\n                        resolve(r)\n                    })\n                }).catch(e => {\n                    reject(e);\n                });\n                ;\n            })\n        },\n        async changeLoggedInUserPassword(context, params) {\n            let api = {\n                verb: 'post',\n                service: moduleAjaxService,\n                url: baseUrl + '/changeLoggedInUserPassword',\n                data: AFD(params.data)\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    resolve(r);\n                }).catch(e => {\n                    reject(e);\n                })\n            })\n        },\n        async updateLoggedInProfile(context, params) {\n            let api = {\n                verb: 'post',\n                service: moduleAjaxService,\n                url: baseUrl + '/updateLoggedInProfile',\n                data: AFD(params.data)\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    resolve(r);\n                }).catch(e => {\n                    reject(e);\n                })\n            })\n        },\n        async update(context, params) {\n            let api = {\n                verb: 'post',\n                service: moduleAjaxService,\n                url: baseUrl + '/update/' + params.id,\n                data: AFD(params.data)\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    resolve(r);\n                }).catch(e => {\n                    reject(e);\n                })\n            })\n        },\n        async login(context, params) {\n            let fd = AFD({\n                username: params.identityPassport,\n                password: params.secret\n            });\n\n            return new Promise((resolve, reject) => {\n                $store.dispatch('ajaxManager/api', {\n                    service: 'AMS',\n                    verb: 'post',\n                    url: '/xapi/individual/user/login',\n                    data: fd,\n                    noToken: true\n                }).then(r => {\n                    context.dispatch('App-User-state/setProfileInfo', r.data, {root: true}).then(() => {\n                        let userBackendModules = r.data.modules\n                        let localModules = $store.state['App-User-state'].modules\n                        let useLocalModules = $store.state['App-User-state'].useLocalModules\n                        $hkms.loadNameSpacesModules((useLocalModules)? localModules : userBackendModules).then(() => {\n                            context.dispatch('ajaxManager/setToken', {\n                                token: r.data.token\n                            }, {root: true}).then(() => {\n                                resolve(true);\n                            })\n                        })\n                    })\n                }).catch(e => {\n                    reject(e);\n                });\n            });\n        }\n    }\n};\n\nexport default userAPI\n"],"names":["baseUrl","moduleAjaxService","userAPI","namespaced","state","version","token","title","actions","async","context","params","verifyAPI","verb","service","url","headers","Promise","resolve","reject","dispatch","root","then","r","getLS","catch","e","api","data","AFD","id","fd","username","identityPassport","password","secret","$store","noToken","userBackendModules","modules","localModules","useLocalModules","$hkms","loadNameSpacesModules"],"sourceRoot":""}