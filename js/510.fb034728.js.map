{"version":3,"file":"js/510.fb034728.js","mappings":"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","sources":["webpack://cms/./src/Modules/App/Module/store/api.js"],"sourcesContent":["import {AFD} from 'devegram-javascript-util'\nconst baseUrl = '/xapi/App/Module';\nconst moduleAjaxService = 'AMS'\nconst api = {\n    namespaced: true,\n    state: {\n        dropDownList: []\n    },\n    actions: {\n    \t/* CRUD APIs */\n\n        async create(context, params) {\n            let api = {\n                verb: 'post',\n                service: moduleAjaxService,\n                url: baseUrl + '/store',\n                data: AFD(params.data)\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    context.state.dropDownList.push({value: r.data.id, label: r.data.id})\n                    resolve(r);\n                }).catch(e => {\n                    reject(e);\n                })\n            })\n        },\n        async update(context, params) {\n            let api = {\n                verb: 'post',\n                service: moduleAjaxService,\n                url: baseUrl + '/update/' + params.id,\n                data: AFD(params.data),\n                noLoadingScreen: true\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    context.state.dropDownList = []\n                    resolve(r);\n                }).catch(e => {\n                    reject(e);\n                });\n            })\n        },\n        async remove(context, params) {\n            let api = {\n                verb: 'post',\n                service: moduleAjaxService,\n                url: baseUrl + '/remove/' + params.id\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    context.state.dropDownList = []\n                    resolve(r);\n                }).catch(e => {\n                    reject(e);\n                });\n            })\n        },\n        async get(context, params) {\n            let api = {\n                verb: 'get',\n                service: moduleAjaxService,\n                url: baseUrl + '/get/' + params.id\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    resolve(r.data);\n                }).catch(e => {\n                    reject(e);\n                });\n            })\n        },\n        async list(context, params) {\n            let page = (params.page) ? params.page : 1\n            let search = (params.hasOwnProperty('search'))? \"&search=\" + encodeURIComponent(params.search) : ''\n            let api = {\n                verb: 'get',\n                service: moduleAjaxService,\n                url: baseUrl + '/list?page=' + page + search,\n                data: null\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    resolve(r.data);\n                }).catch(e => {\n                    reject(e);\n                });\n            })\n        },\n        async getDropDownList (context, params = {}) {\n            if (context.state.dropDownList.length) {\n                return context.state.dropDownList\n            }\n\n        \tlet query = ''\n            if (params.hasOwnProperty('valueKey')) {\n                query = '?value_key=' + params.valueKey\n            }\n            let api = {\n                verb: 'get',\n                service: moduleAjaxService,\n                url: baseUrl + '/dropDownList' + query,\n                data: null\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, { root: true }).then(r => {\n                    context.state.dropDownList = r.data\n                    resolve(r.data);\n                }).catch(e => {\n                    reject(e);\n                });\n            })\n        },\n\n        /* Images APIs */\n\n        async updateImage(context, params) {\n            let api = {\n                verb: 'post',\n                service: moduleAjaxService,\n                url: baseUrl + '/updateImage/' + params.id,\n                data: AFD(params.data)\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    resolve(r);\n                }).catch(e => {\n                    reject(e);\n                })\n            })\n        },\n        async updateGallery(context, params) {\n            let api = {\n                verb: 'post',\n                service: moduleAjaxService,\n                url: baseUrl + '/galleryImage/' + params.id,\n                data: AFD(params.data)\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    resolve(r);\n                }).catch(e => {\n                    reject(e);\n                })\n            })\n        },\n        async removeGalleryImage(context, params) {\n            let api = {\n                verb: 'delete',\n                service: moduleAjaxService,\n                url: baseUrl + '/galleryImage/' + params.id + '/' + params.parentId + '/' + params.fileId,\n                data: AFD(params.data)\n            };\n\n            return new Promise((resolve, reject) => {\n                context.dispatch('ajaxManager/api', api, {root: true}).then(r => {\n                    resolve(r);\n                }).catch(e => {\n                    reject(e);\n                })\n            })\n        },\n    }\n\n};\n\nexport default api\n"],"names":["baseUrl","moduleAjaxService","api","namespaced","state","dropDownList","actions","async","context","params","verb","service","url","data","AFD","Promise","resolve","reject","dispatch","root","then","r","push","value","id","label","catch","e","noLoadingScreen","page","search","hasOwnProperty","encodeURIComponent","length","query","valueKey","parentId","fileId"],"sourceRoot":""}