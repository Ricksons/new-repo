{"version":3,"file":"js/2.11bc83c1.js","mappings":"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","sources":["webpack://cms/./src/Modules/App/Module/list/page/View.vue","webpack://cms/./src/Modules/App/Module/list/page/ag-grid/ActionsCell.vue","webpack://cms/./src/Modules/App/Module/list/page/ag-grid/ActionsCell.vue?6867","webpack://cms/./src/Modules/App/Module/list/page/ag-grid/Toggle.vue","webpack://cms/./src/Modules/App/Module/list/page/ag-grid/Toggle.vue?092b","webpack://cms/./src/components/ag-grid-edit-on-fly-cell/View.vue","webpack://cms/./src/components/ag-grid-edit-on-fly-cell/View.vue?f020","webpack://cms/./src/Modules/App/Module/list/page/View.vue?609c"],"sourcesContent":["<template>\n  <module-list-layout :createAction=\"createAction\" :module=\"module\" class=\"p-2\" v-if=\"amReady\">\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"\" top=\"5vh\" width=\"75%\">\n      <moduleForm\n          :autoBind=\"false\"\n          :bindingForView=\"true\"\n          :dataToBind=\"dataToBind\"\n          :edit-mode=\"editMode\"\n          :formHeader=\"true\"\n          :formTitle=\"((editMode)? 'Update ' : 'Create ') + module.info.caption\"\n          :moduleDeleteAction='moduleFormDeleteAction'\n          :on-create-callback=\"afterCreate\"\n          :on-edit-callback=\"afterEdit\"\n          v-if=\"dialogVisible\"></moduleForm>\n    </el-dialog>\n\n    <div class=\"row pl-3 pr-3\">\n      <div class=\"col-12 col-md-6 pt-1\">\n        <dg-text-field\n            :field_span=\"19\"\n            :label_span=\"24\"\n            :liveUpdate=\"true\"\n            @amUpdated=\"userSearchUpdated\"\n            field_mark=\"\"\n            placeholder=\"search here\"></dg-text-field>\n      </div>\n      <div class=\"col-12 col-md-6  pt-1\">\n        <pagination\n            :currentPage=\"currentPage\"\n            :margin-pages=\"2\"\n            :navigateHandler=\"navigateToPage\"\n            :page-count=\"getPagesCount()\"\n            :page-range=\"4\"\n            paginateClass=\"\"></pagination>\n      </div>\n    </div>\n\n    <app-ag-grid :agGrid=\"agGrid\"></app-ag-grid>\n\n    <el-dialog :visible.sync=\"deleteDialogVisible\" center title=\"Warning\" width=\"420px\">\n      <div align=\"center\" class=\"mt-2 mb-2\">You want to remove this record ?</div>\n      <span class=\"dialog-footer\" slot=\"footer\">\n        <el-button @click=\"deleteDialogVisible = false\" size=\"small\">Cancel</el-button>\n        <el-button @click=\"removeActionApi\" size=\"small\" type=\"danger\">Yes</el-button>\n      </span>\n    </el-dialog>\n  </module-list-layout>\n</template>\n\n<script>\nimport vue from 'vue'\nimport actionsCell from './ag-grid/ActionsCell'\nimport toggleCell from './ag-grid/Toggle'\nimport module from './../../index.js'\nimport editOnFlyCell from \"@/components/ag-grid-edit-on-fly-cell/View\";\nimport {mapActions} from \"vuex\";\n\nexport default {\n  components: {\n    pagination: () => import('@/components/pagination/View.vue'),\n    moduleForm: () => import('../../form/View'),\n    moduleListLayout: () => import('@/modules-config/layouts/list/View.vue')\n  },\n  data() {\n    return {\n      deleteDialogVisible: false,\n      targetParams: null,\n      userSearch: '',\n      userSearchTimeOut: null,\n      amReady: false,\n      module: {\n        ...module\n      },\n      currentPage: 1,\n      pageChunkSize: 12,\n      pageCount: 1,\n      editMode: false,\n      dialogVisible: false,\n      recordsCounter: 0,\n      dataToBind: null,\n      rowToEdit: null,\n      agGrid: {\n        pagination: false,\n        enableRtl: $langConfig.dir == 'rtl',\n        agGridStyle: 'width: 100%; height: 650px; padding: 0',\n        agGridClass: 'ag-theme-material',\n        gridOptions: {\n          suppressCellSelection: true,\n          onGridReady: function (params) {\n            params.api.sizeColumnsToFit()\n          }\n        },\n        columnDefs: [\n          {\n            field: 'namespace',\n            headerName: 'Namespace',\n            headerClass: $langConfig.lang + '-lang-text text-capitalize',\n            autoHeight: true,\n            suppressKeyboardEvent: (params) => {\n              return true\n            },\n            cellRendererFramework: vue.extend(editOnFlyCell),\n            cellRendererParams: {\n              props: {\n                inputWidth: '180px',\n                valuePropertyName: 'namespace',\n                saveAction: this.updateField,\n                editContainerStyle: 'top: 0px;'\n              }\n            }\n            /*,cellRenderer: (params) => {\n              return params.data.system_profit_percent  + '%';\n            }*/\n          },\n          {\n            field: 'name',\n            headerName: 'Name',\n            headerClass: $langConfig.lang + '-lang-text',\n          },\n          {\n            field: 'group_name',\n            headerName: 'Group Name',\n            headerClass: $langConfig.lang + '-lang-text',\n          },\n          {\n            field: 'caption',\n            headerName: 'Caption',\n            headerClass: $langConfig.lang + '-lang-text text-capitalize',\n          },\n          {\n            width: 100,\n            field: 'used_by_root',\n            headerName: 'Used by Root',\n            headerClass: $langConfig.lang + '-lang-text text-capitalize',\n            autoHeight: true,\n            cellRendererFramework: vue.extend(toggleCell),\n            cellRendererParams: {\n              props: {\n                actionsHandler: this.actionsHandler\n              }\n            }\n          },\n          /*{\n            field: 'date',\n            headerName: 'Date',\n            headerClass: $langConfig.lang + '-lang-text text-capitalize',\n            cellRenderer: (params) => {\n              let span = document.createElement('span')\n              span.style.color = params.color\n              span.innerText = params.data.created_at\n              return span\n            },\n            cellRendererParams: {\n              color: 'orange'\n            }\n          },*/\n          {\n            width: 80,\n            headerName: this.$ml.get('actions'),\n            headerClass: $langConfig.lang + '-lang-text text-capitalize',\n            cellRendererFramework: vue.extend(actionsCell),\n            cellRendererParams: {\n              props: {\n                actionsHandler: this.actionsHandler\n              }\n            }\n          }\n        ],\n        rowData: []\n      }\n    };\n  },\n  beforeMount() {\n    this.currentPage = parseInt(this.$route.params.listPage)\n    this.getEntityListData(this.currentPage)\n  },\n  methods: {\n    updateField(agGridParams, newValue, afterSave, fieldName) {\n      let data = {}\n      data[fieldName] = newValue\n\n      let apiParams = {\n        id: agGridParams.data.id,\n        data\n      }\n\n      this.updateModule(apiParams).then(r => {\n        afterSave()\n      })\n    },\n    setUsedByRoot(params) {\n      let apiParams = {\n        id: params.module_id,\n        data: {\n          used_by_root: (params.value)? 1 : 0\n        }\n      }\n\n      this.updateModule(apiParams)\n    },\n    getEntityListData(page) {\n      this.getEntityList({page: page, search: this.userSearch}).then(response => {\n        this.buildAgGridData(response)\n      })\n      this.currentPage = page\n    },\n    buildAgGridData(response) {\n      this.agGrid.rowData = response.rows\n      this.recordsCounter = response.count\n      this.amReady = true\n    },\n    userSearchUpdated(field) {\n      // this.agGrid.gridApi.setQuickFilter(val);\n      let val = field.field.field_value\n      this.userSearch = val\n      clearTimeout(this.userSearchTimeOut)\n      this.userSearchTimeOut = setTimeout(() => {\n        this.getEntityListData(1) //this.agGrid.gridApi.setQuickFilter(val);\n      }, 200)\n    },\n    ...mapActions(module.info.fullName + '-api', {\n      getEntityList: 'list',\n      updateModule: 'update'\n    }),\n    scrollToTop() {\n      document.body.scrollTop = 0;\n      document.getElementById('content-main-container').scrollTop = 0;\n    },\n    getPagesCount() {\n      return Math.ceil(this.recordsCounter / this.pageChunkSize)\n    },\n    navigateToPage(page) {\n      $router.push({name: this.module.info.routeName + '->list->page', params: {listPage: page}})\n      /*this.getEntityList({page: page, search: this.userSearch}).then(response => {\n        this.buildAgGridData(response)\n      })*/\n    },\n    refreshGrid() {\n      this.agGrid.gridOptions.api.setRowData(this.agGrid.rowData)\n    },\n    afterEdit(updatedData, propertyName = false, closeDialog = true) {\n      // getting a rowNode by index\n      // this.agGrid.gridApi.getDisplayedRowAtIndex(0).setData({})\n\n      if (propertyName) {\n        this.agGrid.rowData[this.rowToEdit][propertyName] = updatedData;\n      } else {\n        this.agGrid.rowData[this.rowToEdit] = updatedData;\n      }\n\n      if (closeDialog) this.dialogVisible = false;\n      this.refreshGrid();\n    },\n    moduleFormDeleteAction() {\n      this.removeAction({\n        data: this.dataToBind,\n        rowIndex: this.rowToEdit\n      })\n      this.dialogVisible = false;\n    },\n    afterCreate(newEntity) {\n      this.agGrid.rowData.push(newEntity);\n      this.dialogVisible = false;\n      this.refreshGrid();\n    },\n    createAction(params) {\n      this.dialogVisible = true;\n      this.editMode = false;\n      this.dataToBind = null;\n      this.rowToEdit = null;\n      // this.$router.push({ name: this.module.info.routeName + '->view', params: { id: params.data.id}})\n    },\n    editAction(params) {\n      this.dialogVisible = true;\n      this.editMode = true;\n      this.dataToBind = params.data;\n      this.rowToEdit = params.rowIndex;\n    },\n    removeAction(params) {\n      this.targetParams = params\n      this.deleteDialogVisible = true\n    },\n    removeActionApi() {\n      let params = this.targetParams\n      this.deleteDialogVisible = false\n      this.$store.dispatch(this.module.info.fullName + '-api/remove', {id: params.data.id}).then(response => {\n        this.agGrid.rowData.splice(params.rowIndex, 1);\n        this.refreshGrid();\n        this.recordsCounter -= 1;\n        $notify.view({\n          type: 'success',\n          title: this.$ml.get('deleted'),\n        });\n      })\n    },\n    actionsHandler(command, params) {\n      this[command](params)\n    }\n  }\n}\n</script>\n","<template>\n    <div>\n        <el-dropdown trigger=\"click\" @command=\"params.props.actionsHandler($event, params)\">\n            <el-button icon=\"el-icon-more\" type=\"plain\" size=\"mini\"></el-button>\n            <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item command=\"editAction\">\n                    <i class=\"el-icon-edit-outline\"></i> {{$ml.get('edit')}}\n                </el-dropdown-item>\n                <el-dropdown-item command=\"removeAction\">\n                    <i class=\"el-icon-delete\"></i> {{$ml.get('remove')}}\n                </el-dropdown-item>\n            </el-dropdown-menu>\n        </el-dropdown>\n    </div>\n</template>\n","import { render } from \"./ActionsCell.vue?vue&type=template&id=15c5e049\"\nconst script = {}\n\nimport exportComponent from \"/home/runner/work/new-repo/new-repo/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <el-switch @change=\"change\" v-model=\"toggleState\"></el-switch>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      toggleState: false\n    }\n  },\n  beforeMount() {\n    this.toggleState = (this.params.data.used_by_root === 1)\n  },\n  methods: {\n    change(val) {\n      let data = {\n        value: val,\n        module_id: this.params.data.id\n      }\n      this.params.props.actionsHandler('setUsedByRoot', data)\n    }\n  }\n}\n</script>\n","import { render } from \"./Toggle.vue?vue&type=template&id=115ec12a\"\nimport script from \"./Toggle.vue?vue&type=script&lang=js\"\nexport * from \"./Toggle.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/new-repo/new-repo/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- @blur=\"returnToOriginal\" @focusout=\"returnToOriginal\"-->\n    <span v-if=\"!editMode\">\n      <i class=\"el-icon-copy-document text-info mr-2\" style=\"cursor: pointer\" @click=\"copyToClipBoard\"></i>\n      <i class=\"el-icon-edit text-info mr-2\" style=\"cursor: pointer\" @click=\"fucusIn\"></i>\n      <span class=\"copy-to-target\">{{cellValue}}</span>\n    </span>\n    <div class=\"editing-mode-container\" :style=\"editContainerStyle\" v-else>\n      <i class=\"el-icon-circle-close text-danger\" style=\"margin-right: 5px;\" @click=\"returnToOriginal\"></i>\n      <el-input ref=\"input\" @input=\"change\" placeholder=\"\" size=\"mini\" v-model=\"cellValue\" :style=\"'width:' +  inputWidth\"></el-input>\n      <el-button v-if=\"saveIsActive\" @click=\"saveNewValue\" class=\"ml-2\" type=\"success\" icon=\"el-icon-check\" circle size=\"mini\"></el-button>\n      <!--  <el-button v-if=\"saveIsActive\" @click=\"returnToOriginal\" class=\"ml-2\" type=\"danger\" icon=\"el-icon-close\" circle size=\"mini\"></el-button>-->\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nexport default {\n  data() {\n    return {\n      editMode: false,\n      cellValue: '',\n      originalValue: 0.00,\n      saveIsActive: false,\n      inputWidth: '120px',\n      editContainerStyle: ''\n    }\n  },\n  beforeMount() {\n    if (this.params.props.editContainerStyle) {\n      this.editContainerStyle = this.params.props.editContainerStyle\n    }\n    this.cellValue = this.params.data[this.params.props.valuePropertyName]\n    this.originalValue = this.params.data[this.params.props.valuePropertyName]\n    if (this.params.props.inputWidth) {\n      this.inputWidth = this.params.props.inputWidth\n    }\n  },\n  methods: {\n    copyToClipBoard () {\n      let copyText = this.$el.getElementsByClassName('copy-to-target')[0]\n      const el = document.createElement('textarea');\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      el.value = copyText.innerText;\n      document.body.appendChild(el);\n      el.select();\n      if (document.execCommand('copy')) {\n        this.$notify({\n          title: 'Copied to clipboard',\n          type: 'success',\n          showClose: false,\n          duration: 1000\n        });\n      }\n      document.body.removeChild(el);\n    },\n    fucusIn () {\n      this.editMode = true\n      Vue.nextTick(() => {\n        this.$refs['input'].focus()\n      })\n    },\n    fucusout () {\n      this.returnToOriginal()\n    },\n    returnToOriginal () {\n      this.editMode = false\n      this.cellValue = this.originalValue\n      this.saveIsActive = false\n    },\n    saveNewValue () {\n      this.params.props.saveAction(this.params, this.cellValue, () => {\n        this.editMode = false\n        this.originalValue = this.cellValue\n        this.saveIsActive = false\n      }, this.params.props.valuePropertyName)\n    },\n    change(val) {\n      if (this.originalValue !== this.cellValue) {\n        this.saveIsActive = true\n      } else {\n        this.saveIsActive = false\n      }\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n.editing-mode-container {\n  position: fixed;\n  z-index: 1000;\n  display: inline-block;\n  width: 200px;\n}\n</style>\n","import { render } from \"./View.vue?vue&type=template&id=0f710232&scoped=true\"\nimport script from \"./View.vue?vue&type=script&lang=js\"\nexport * from \"./View.vue?vue&type=script&lang=js\"\n\nimport \"./View.vue?vue&type=style&index=0&id=0f710232&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/new-repo/new-repo/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0f710232\"]])\n\nexport default __exports__","import { render } from \"./View.vue?vue&type=template&id=59fff1eb\"\nimport script from \"./View.vue?vue&type=script&lang=js\"\nexport * from \"./View.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/new-repo/new-repo/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","align","slot","$data","_createBlock","_component_module_list_layout","createAction","$options","module","_createVNode","_component_el_dialog","visible","title","top","width","_component_moduleForm","autoBind","bindingForView","dataToBind","formHeader","formTitle","info","caption","moduleDeleteAction","_component_dg_text_field","field_span","label_span","liveUpdate","onAmUpdated","field_mark","placeholder","_component_pagination","currentPage","navigateHandler","paginateClass","_component_app_ag_grid","agGrid","center","_hoisted_4","_component_el_button","onClick","size","type","_createElementBlock","_component_el_dropdown","trigger","onCommand","_ctx","props","actionsHandler","$event","icon","_component_el_dropdown_menu","_component_el_dropdown_item","command","_hoisted_1","_toDisplayString","get","_hoisted_2","script","__exports__","_component_el_switch","onChange","data","toggleState","beforeMount","this","params","used_by_root","methods","change","val","value","module_id","id","style","_component_el_input","ref","onInput","circle","editMode","cellValue","originalValue","saveIsActive","inputWidth","editContainerStyle","valuePropertyName","copyToClipBoard","copyText","$el","getElementsByClassName","el","document","createElement","setAttribute","position","left","innerText","body","appendChild","select","execCommand","$notify","showClose","duration","removeChild","fucusIn","Vue","$refs","focus","fucusout","returnToOriginal","saveNewValue","saveAction","components","pagination","moduleForm","moduleListLayout","deleteDialogVisible","targetParams","userSearch","userSearchTimeOut","amReady","pageChunkSize","pageCount","dialogVisible","recordsCounter","rowToEdit","enableRtl","$langConfig","dir","agGridStyle","agGridClass","gridOptions","suppressCellSelection","onGridReady","api","sizeColumnsToFit","columnDefs","field","headerName","headerClass","lang","autoHeight","suppressKeyboardEvent","cellRendererFramework","vue","editOnFlyCell","cellRendererParams","updateField","toggleCell","$ml","actionsCell","rowData","parseInt","$route","listPage","getEntityListData","agGridParams","newValue","afterSave","fieldName","apiParams","updateModule","then","r","setUsedByRoot","page","getEntityList","search","response","buildAgGridData","rows","count","userSearchUpdated","field_value","clearTimeout","setTimeout","mapActions","scrollToTop","scrollTop","getElementById","getPagesCount","Math","ceil","navigateToPage","$router","push","name","routeName","refreshGrid","setRowData","afterEdit","updatedData","propertyName","closeDialog","moduleFormDeleteAction","removeAction","rowIndex","afterCreate","newEntity","editAction","removeActionApi","$store","dispatch","fullName","splice","view","render"],"sourceRoot":""}